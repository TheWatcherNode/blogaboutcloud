 <#Information
     Populate Exchange Mailbox with Test Data using File extensions

     Date Published: XX/09/2018 (UK Format)

     .DESCRIPTION
     Toolto assist with the deployment of Office 365 ProPlus

     .NOTES
     Version				: 1.0
     Wish list			    : Better error trapping
                            : 
     Rights Required	    : Local administrator on Workstation
                            : 
                            : Powershell in Administrator Mode
     Sched Task Required	: No
     Author/Copyright	    : © The Watcher - All Rights Reserved
     Email/Blog/Twitter	    : thewatcher@blogabout.cloud @thewatchernode
     Acknowledgements       : Andreas Hähnel
     Dedicated Post	        : 
 
     Disclaimer             : You running this script means you won't blame me if this breaks your stuff. This script is provided AS IS without warranty of any kind. 
                              I disclaim all implied warranties including,
                              without limitation, any implied warranties of merchantability or of fitness
                              .SYNOPSIS for a particular
                              purpose. The entire risk arising out of the use or performance of the sample scripts and
                              documentation remains with you. In no event shall I be liable for any damages whatsoever
                              (including, without limitation, damages for loss of business profits, business interruption,
                              loss of business information, or other pecuniary loss) arising out of the use of or inability
                              to use the script or documentation.

     Acknowledgements 	        : 
                                : 
                                :
     Assumptions		        : ExecutionPolicy of AllSigned (recommended), RemoteSigned or Unrestricted (not recommended)
                                :  
     Limitations			    : 
     Known issues			    :
  
     Version Changes            : 0.1 Initial Script Build
                                : 1.0 Public Release
     .LINK
     

     .EXAMPLE
     .\new-mailboxdata.ps1 -receipientaddress testuser1@domain.com -amountofdatainmb 10 -fileslocation c:\folder -senderaddress sender@dom1.com 

     Description
     -----------
     Runs script with default values.


     .INPUTS
     None. You cannot pipe objects to this script.
 #>
 #region Variables
      $body = '<br><h1>Hello</h1><br><br>This is an automated email generated by Add-MailboxData.ps1. This script is designed to populate a test mailbox with data before its migrated to Office 365.<br><br>Regards,<br>@thewatchernode'
      $smtp = 'smtp.office365.com'
      $port = '587'
      $White = 'White'
      $DarkGray = 'DarkGray'
      $Global:RecipientAddress = $Global:RecipientAddress
      $Global:AmountofDataInMB = $Global:AmountofDataInMB
      $Global:FilesLocation = $Global:FilesLocation
      $Global:SenderAddress = $Global:SenderAddress
 #endregion 
 [string] $Root = @"
 
  ┌─────────────────────────────────────────────────────────────┐
     Populating your Exchange Mailbox with Dummy Data              
           
                Follow me @thewatchernode on Twitter                   
  └─────────────────────────────────────────────────────────────┘
"@
 Function Get-Parameter {
   [cmdletbinding()]
   param( 
      [Parameter(Mandatory=$true,HelpMessage='Please enter the Receipient Email Address',Position=1)][String]$RecipientAddress, 
      [Parameter(Mandatory=$true,HelpMessage='Please enter the amount of data to be sent in MB')][int]$AmountofDataInMB, 
      [Parameter(Mandatory=$true,HelpMessage='Please enter the location of the files which will used to generate data transfer (i.e. C:\Files)',Position=1)][String]$FilesLocation,
      [Parameter(Mandatory=$true,HelpMessage='Please enter the Sender Email Address (Must be Office 365 Address)',Position=1)][String]$SenderAddress
      )
      }
 Function New-MailMessage {
   [Double]$totalsize = 0
   [Double]$attsize = 0
       $pw = Read-Host -Prompt ('Please enter the password for ' + $SenderAddress) -AsSecureString | ConvertFrom-Securestring
       $creds = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $SenderAddress, ($pw | ConvertTo-SecureString)
       $files = Get-ChildItem -Path $FilesLocation -Recurse
       $mailcount = 1
   Try {
     while ($totalsize -lt $AmountofDataInMB)
      { 
       $attachment = $files[(Get-Random -Minimum 0 -Maximum ($files.Count - 1))].FullName 
       $attsize = ((Get-Item -Path $attachment).Length / 1000000) 
       $totalsize += $attsize 
       Write-Verbose -Message ('Sending Email Count ' + $mailcount.ToString() + '; Total size being sent: ' + $totalsize.ToString()) -Verbose
       Send-MailMessage -From $SenderAddress -to $RecipientAddress -Attachments $attachment -SmtpServer $smtp -Credential $creds -UseSsl -Subject ('Mail Data Email ' + $attachment + $mailcount.ToString() + ' via PowerShell script') -port $port -body $body -BodyAsHtml   
       $mailcount++
     }
     }
   catch
     {
     Write-Warning -Message (('Script has failed to detect Folder located in Folder specified {0}, Please investigate your Folder location and try again' -f $FilesLocation))
     }
     }
 
 Clear-Host
 Write-host 'Version information - You are running script version 1.1' -ForegroundColor $White -BackgroundColor $DarkGray
 $Root
 Get-Parameter
 New-MailMessage
